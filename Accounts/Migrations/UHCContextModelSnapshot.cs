// <auto-generated />
using System;
using Accounts.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Accounts.Migrations
{
    [DbContext(typeof(UHCContext))]
    partial class UHCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Accounts.Models.AgentLogins", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .HasMaxLength(50);

                    b.Property<bool?>("Valid");

                    b.HasKey("Id");

                    b.ToTable("AgentLogins");
                });

            modelBuilder.Entity("Accounts.Models.Agents", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateRegistered");

                    b.Property<string>("FirstName");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(450);

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Subcounty")
                        .HasColumnName("SUBCOUNTY");

                    b.Property<string>("TerminalId")
                        .HasMaxLength(450);

                    b.Property<string>("UserName");

                    b.Property<string>("Village")
                        .HasColumnName("VILLAGE");

                    b.Property<string>("Ward")
                        .HasColumnName("WARD");

                    b.HasKey("Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Accounts.Models.AppUsers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateRegistered");

                    b.Property<string>("FirstName");

                    b.Property<string>("IdNumber");

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("SUBCOUNTY");

                    b.Property<string>("TerminalId");

                    b.Property<string>("UserName");

                    b.Property<string>("VILLAGE");

                    b.Property<string>("WARD");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Accounts.Models.BulkPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("IdentificationNo");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("BulkPayments");
                });

            modelBuilder.Entity("Accounts.Models.ClientProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Business")
                        .HasMaxLength(50);

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Comments")
                        .HasMaxLength(200);

                    b.Property<string>("Country")
                        .HasMaxLength(50);

                    b.Property<int?>("CreatedUserId");

                    b.Property<string>("Currency")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Datecreated")
                        .HasColumnType("date");

                    b.Property<string>("DefaultCode")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool?>("Isactive");

                    b.Property<string>("Language")
                        .HasMaxLength(50);

                    b.Property<string>("Mediaurl")
                        .HasMaxLength(80);

                    b.Property<int?>("ModifiedUserId");

                    b.HasKey("Id");

                    b.ToTable("ClientProfile");
                });

            modelBuilder.Entity("Accounts.Models.ClientSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ActivationAmount");

                    b.Property<int>("AgeException");

                    b.Property<bool>("AgentCanReceiveCash");

                    b.Property<decimal>("CardReplacementFee");

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.Property<bool>("FacialAuthentification");

                    b.Property<bool>("FingerPrintAuthentification");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<decimal>("MaxContribution");

                    b.Property<int>("MaximumNoofDependents");

                    b.Property<decimal>("MinContribution");

                    b.Property<bool>("NotificationOnActivation");

                    b.Property<bool>("NotificationOnCardCollected");

                    b.Property<bool>("NotificationOnCardReady");

                    b.Property<bool>("NotificationOnDischarge");

                    b.Property<bool>("NotificationOnPayment");

                    b.Property<bool>("NotificationOnVisit");

                    b.Property<bool>("NotifyViaSms")
                        .HasColumnName("NotifyViaSMS");

                    b.Property<bool>("OpticalAuthentification");

                    b.Property<int>("PaymentPlansInstallments");

                    b.Property<bool>("SpecialistsCovered");

                    b.Property<decimal>("TotalSubscriptionAmount");

                    b.Property<bool>("VoiceAuthentification");

                    b.HasKey("Id");

                    b.ToTable("ClientSetup");
                });

            modelBuilder.Entity("Accounts.Models.Constituencies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ConstCode")
                        .HasColumnName("CONST_CODE");

                    b.Property<string>("Constituen")
                        .HasColumnName("CONSTITUEN")
                        .HasMaxLength(255);

                    b.Property<string>("CountyA1")
                        .HasColumnName("COUNTY_A_1")
                        .HasMaxLength(255);

                    b.Property<double?>("CountyAss")
                        .HasColumnName("COUNTY_ASS");

                    b.Property<double?>("CountyCod")
                        .HasColumnName("COUNTY_COD");

                    b.Property<string>("CountyNam")
                        .HasColumnName("COUNTY_NAM")
                        .HasMaxLength(255);

                    b.Property<long?>("Objectid")
                        .HasColumnName("OBJECTID");

                    b.Property<double?>("RegistCen")
                        .HasColumnName("REGIST_CEN");

                    b.Property<string>("Registrati")
                        .HasColumnName("REGISTRATI")
                        .HasMaxLength(255);

                    b.Property<double?>("ShapeArea")
                        .HasColumnName("Shape_Area");

                    b.Property<double?>("ShapeLeng")
                        .HasColumnName("Shape_Leng");

                    b.HasKey("Id");

                    b.ToTable("constituencies");
                });

            modelBuilder.Entity("Accounts.Models.Counties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ConstCode")
                        .HasColumnName("CONST_CODE");

                    b.Property<string>("Constituen")
                        .HasColumnName("CONSTITUEN")
                        .HasMaxLength(255);

                    b.Property<long?>("CountyCod")
                        .HasColumnName("COUNTY_COD");

                    b.Property<string>("CountyNam")
                        .HasColumnName("COUNTY_NAM")
                        .HasMaxLength(255);

                    b.Property<long?>("Id1")
                        .HasColumnName("ID_");

                    b.Property<long?>("Objectid")
                        .HasColumnName("OBJECTID");

                    b.Property<double?>("ShapeArea")
                        .HasColumnName("Shape_Area");

                    b.Property<double?>("ShapeLeng")
                        .HasColumnName("Shape_Leng");

                    b.HasKey("Id");

                    b.ToTable("counties");
                });

            modelBuilder.Entity("Accounts.Models.CountyOfficers", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CountyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("NationalId");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("Status");

                    b.Property<long?>("WardId");

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("CountyOfficers");
                });

            modelBuilder.Entity("Accounts.Models.Dependants", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("BirthCertificateNo");

                    b.Property<long>("PrincipalId");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Dependants");
                });

            modelBuilder.Entity("Accounts.Models.DepositRequests", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckoutRequestId");

                    b.Property<string>("MerchantRequestId");

                    b.Property<int>("ResultCode");

                    b.Property<string>("ResultDesc");

                    b.HasKey("Id");

                    b.ToTable("DepositRequests");
                });

            modelBuilder.Entity("Accounts.Models.Deposits", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo");

                    b.Property<double>("Amount");

                    b.Property<double>("Balance");

                    b.Property<string>("CheckoutRequestId");

                    b.Property<string>("Comment");

                    b.Property<string>("CountyName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description");

                    b.Property<string>("DocumentNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MerchantRequestId");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ReceiptNo");

                    b.Property<int>("ResultCode");

                    b.Property<string>("ResultDesc");

                    b.Property<bool>("SentToJournal");

                    b.Property<string>("Span");

                    b.Property<int>("Status");

                    b.Property<string>("TerminalId");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionStatus");

                    b.Property<string>("Zone");

                    b.HasKey("Id");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("Accounts.Models.Facility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacilityAddress")
                        .HasMaxLength(50);

                    b.Property<int?>("FacilityCategory");

                    b.Property<string>("FacilityLatitude")
                        .HasMaxLength(50);

                    b.Property<string>("FacilityLongitude")
                        .HasMaxLength(50);

                    b.Property<string>("FacilityName")
                        .HasMaxLength(50);

                    b.Property<string>("FacilityOwner")
                        .HasMaxLength(50);

                    b.Property<int?>("FacilityOwnerCategory");

                    b.Property<bool?>("HasBeds");

                    b.Property<int?>("Kephlevel")
                        .HasColumnName("KEPHLevel");

                    b.Property<bool?>("Open24hrs");

                    b.Property<bool?>("OpenPublicholidays");

                    b.Property<bool?>("OpenWeekends");

                    b.Property<int?>("OperationStatus");

                    b.Property<int?>("WardId");

                    b.HasKey("Id");

                    b.ToTable("Facility");
                });

            modelBuilder.Entity("Accounts.Models.FacilityKephlevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Kephlevel")
                        .IsRequired()
                        .HasColumnName("KEPHLevel")
                        .HasMaxLength(50);

                    b.Property<string>("KephlevelName")
                        .IsRequired()
                        .HasColumnName("KEPHLevelName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FacilityKEPHLevel");
                });

            modelBuilder.Entity("Accounts.Models.ImageData", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("LeftThumbprint");

                    b.Property<string>("PhotoImage");

                    b.Property<string>("RightThumbprint");

                    b.Property<string>("Signature");

                    b.HasKey("Id");

                    b.ToTable("ImageData");
                });

            modelBuilder.Entity("Accounts.Models.KituiSubcounties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cca2")
                        .HasColumnName("CCA_2")
                        .HasMaxLength(255);

                    b.Property<double?>("Ccn2")
                        .HasColumnName("CCN_2");

                    b.Property<string>("Engtype2")
                        .HasColumnName("ENGTYPE_2")
                        .HasMaxLength(255);

                    b.Property<string>("Hasc2")
                        .HasColumnName("HASC_2")
                        .HasMaxLength(255);

                    b.Property<double?>("Id0")
                        .HasColumnName("ID_0");

                    b.Property<double?>("Id1")
                        .HasColumnName("ID_1");

                    b.Property<double?>("Id2")
                        .HasColumnName("ID_2");

                    b.Property<string>("Iso")
                        .HasColumnName("ISO")
                        .HasMaxLength(255);

                    b.Property<string>("Name0")
                        .HasColumnName("NAME_0")
                        .HasMaxLength(255);

                    b.Property<string>("Name1")
                        .HasColumnName("NAME_1")
                        .HasMaxLength(255);

                    b.Property<string>("Name2")
                        .HasColumnName("NAME_2")
                        .HasMaxLength(255);

                    b.Property<string>("NlName2")
                        .HasColumnName("NL_NAME_2")
                        .HasMaxLength(255);

                    b.Property<string>("Type2")
                        .HasColumnName("TYPE_2")
                        .HasMaxLength(255);

                    b.Property<string>("Varname2")
                        .HasColumnName("VARNAME_2")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("kituiSubcounties");
                });

            modelBuilder.Entity("Accounts.Models.MemberLedgerEntries", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentNo");

                    b.Property<string>("ExternalDocumentNo");

                    b.Property<long>("MemberId");

                    b.Property<DateTime>("PaymentEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("TransactionTypeId");

                    b.HasKey("Id");

                    b.ToTable("MemberLedgerEntries");
                });

            modelBuilder.Entity("Accounts.Models.Payments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50);

                    b.Property<string>("MemberNo")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMode")
                        .HasMaxLength(50);

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(50);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Accounts.Models.People", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CardPrintDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("CardPrinted");

                    b.Property<string>("CardUid")
                        .HasColumnName("CardUID")
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<double>("Height");

                    b.Property<string>("IdentificationNo")
                        .HasMaxLength(50);

                    b.Property<string>("IdentificationType")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("LeftThumb");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50);

                    b.Property<string>("MemberNo")
                        .HasMaxLength(30);

                    b.Property<string>("MemberType")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<double>("NhifNo");

                    b.Property<string>("Occupation")
                        .HasMaxLength(60);

                    b.Property<string>("OldMemberNo")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50);

                    b.Property<string>("PhotoImage");

                    b.Property<string>("PhysicalAddress")
                        .HasMaxLength(150);

                    b.Property<string>("PinNo")
                        .HasMaxLength(50);

                    b.Property<string>("RightThumb");

                    b.Property<string>("Signature");

                    b.Property<int>("Status");

                    b.Property<string>("TerminalId")
                        .HasMaxLength(50);

                    b.Property<long?>("WardId");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Accounts.Models.Principals", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("NationalId");

                    b.HasKey("Id");

                    b.ToTable("Principals");
                });

            modelBuilder.Entity("Accounts.Models.RemmittanceMatrices", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<long>("DestinationCorporateId");

                    b.Property<string>("ModifiedBy");

                    b.Property<long>("PlanId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("RemmittanceMatrices");
                });

            modelBuilder.Entity("Accounts.Models.RemmittancePlans", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<long>("CorporateId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("RemmittancePlans");
                });

            modelBuilder.Entity("Accounts.Models.Spouses", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("NationalId");

                    b.Property<long>("PrincipalId");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Spouses");
                });

            modelBuilder.Entity("Accounts.Models.TheCounties", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("ContactEmail");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("TheCounties");
                });

            modelBuilder.Entity("Accounts.Models.TheSubCounties", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("ContactEmail");

                    b.Property<long>("CountyId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("TheSubCounties");
                });

            modelBuilder.Entity("Accounts.Models.TheWards", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("ContactEmail");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int>("Status");

                    b.Property<long>("SubCountyId");

                    b.HasKey("Id");

                    b.HasIndex("SubCountyId");

                    b.ToTable("TheWards");
                });

            modelBuilder.Entity("Accounts.Models.TransactionTypes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("Accounts.Models.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateRegistered");

                    b.Property<string>("FirstName");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(450);

                    b.Property<DateTime?>("LastModified");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Subcounty")
                        .HasColumnName("SUBCOUNTY");

                    b.Property<string>("TerminalId")
                        .HasMaxLength(450);

                    b.Property<string>("UserName");

                    b.Property<string>("Village")
                        .HasColumnName("VILLAGE");

                    b.Property<string>("Ward")
                        .HasColumnName("WARD");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Accounts.Models.Wards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ConstCode")
                        .HasColumnName("CONST_CODE");

                    b.Property<string>("Constituen")
                        .HasColumnName("CONSTITUEN")
                        .HasMaxLength(255);

                    b.Property<string>("CountyA1")
                        .HasColumnName("COUNTY_A_1")
                        .HasMaxLength(255);

                    b.Property<long?>("CountyAss")
                        .HasColumnName("COUNTY_ASS");

                    b.Property<long?>("CountyCod")
                        .HasColumnName("COUNTY_COD");

                    b.Property<string>("CountyNam")
                        .HasColumnName("COUNTY_NAM")
                        .HasMaxLength(255);

                    b.Property<long?>("Disputed")
                        .HasColumnName("DISPUTED");

                    b.Property<string>("Name")
                        .HasColumnName("NAME")
                        .HasMaxLength(255);

                    b.Property<long?>("Objectid")
                        .HasColumnName("OBJECTID");

                    b.Property<long?>("Objectid1")
                        .HasColumnName("OBJECTID_1");

                    b.Property<string>("Registered")
                        .HasColumnName("REGISTERED")
                        .HasMaxLength(255);

                    b.Property<long?>("Rejected")
                        .HasColumnName("REJECTED");

                    b.Property<long?>("Reported")
                        .HasColumnName("REPORTED");

                    b.Property<string>("Result")
                        .HasColumnName("RESULT")
                        .HasMaxLength(255);

                    b.Property<double?>("ShapeArea")
                        .HasColumnName("Shape_Area");

                    b.Property<double?>("ShapeLe1")
                        .HasColumnName("Shape_Le_1");

                    b.Property<double?>("ShapeLeng")
                        .HasColumnName("Shape_Leng");

                    b.Property<long?>("Spoilt")
                        .HasColumnName("SPOILT");

                    b.Property<double?>("SpoiltVal")
                        .HasColumnName("SPOILT_VAL");

                    b.Property<long?>("Valid")
                        .HasColumnName("VALID");

                    b.HasKey("Id");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("Accounts.Models.CountyOfficers", b =>
                {
                    b.HasOne("Accounts.Models.TheCounties", "County")
                        .WithMany("CountyOfficers")
                        .HasForeignKey("CountyId")
                        .HasConstraintName("FK_dbo.CountyOfficers_dbo.TheCounties_CountyId");
                });

            modelBuilder.Entity("Accounts.Models.Dependants", b =>
                {
                    b.HasOne("Accounts.Models.People", "IdNavigation")
                        .WithOne("Dependants")
                        .HasForeignKey("Accounts.Models.Dependants", "Id")
                        .HasConstraintName("FK_dbo.Dependants_dbo.People_Id");

                    b.HasOne("Accounts.Models.Principals", "Principal")
                        .WithMany("Dependants")
                        .HasForeignKey("PrincipalId")
                        .HasConstraintName("FK_dbo.Dependants_dbo.Principals_PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Accounts.Models.ImageData", b =>
                {
                    b.HasOne("Accounts.Models.ImageData", "IdNavigation")
                        .WithOne("InverseIdNavigation")
                        .HasForeignKey("Accounts.Models.ImageData", "Id")
                        .HasConstraintName("FK_ImageData_ImageData1");
                });

            modelBuilder.Entity("Accounts.Models.Principals", b =>
                {
                    b.HasOne("Accounts.Models.People", "IdNavigation")
                        .WithOne("Principals")
                        .HasForeignKey("Accounts.Models.Principals", "Id")
                        .HasConstraintName("FK_dbo.Principals_dbo.People_Id");
                });

            modelBuilder.Entity("Accounts.Models.RemmittanceMatrices", b =>
                {
                    b.HasOne("Accounts.Models.RemmittancePlans", "Plan")
                        .WithMany("RemmittanceMatrices")
                        .HasForeignKey("PlanId")
                        .HasConstraintName("FK_dbo.RemmittanceMatrices_dbo.RemmittancePlans_PlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Accounts.Models.Spouses", b =>
                {
                    b.HasOne("Accounts.Models.People", "IdNavigation")
                        .WithOne("Spouses")
                        .HasForeignKey("Accounts.Models.Spouses", "Id")
                        .HasConstraintName("FK_dbo.Spouses_dbo.People_Id");

                    b.HasOne("Accounts.Models.Principals", "Principal")
                        .WithMany("Spouses")
                        .HasForeignKey("PrincipalId")
                        .HasConstraintName("FK_dbo.Spouses_dbo.Principals_PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Accounts.Models.TheSubCounties", b =>
                {
                    b.HasOne("Accounts.Models.TheCounties", "County")
                        .WithMany("TheSubCounties")
                        .HasForeignKey("CountyId")
                        .HasConstraintName("FK_dbo.TheSubCounties_dbo.TheCounties_CountyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Accounts.Models.TheWards", b =>
                {
                    b.HasOne("Accounts.Models.TheSubCounties", "SubCounty")
                        .WithMany("TheWards")
                        .HasForeignKey("SubCountyId")
                        .HasConstraintName("FK_dbo.TheWards_dbo.TheSubCounties_SubCountyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
